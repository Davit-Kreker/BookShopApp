// <auto-generated />
using BookShopApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShopApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230824192219_temp1")]
    partial class temp1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookShopApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Harper Lee",
                            Count = 57,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            Count = 20,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            Author = "F. Scott Fitzgerald",
                            Count = 60,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jane Austen",
                            Count = 37,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.D. Salinger",
                            Count = 2,
                            Title = "The Catcher in the Rye"
                        });
                });

            modelBuilder.Entity("BookShopApp.Models.BookDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("BookDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Description = "Classic novel by Harper Lee."
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Description = "Dystopian masterpiece by George Orwell."
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            Description = "F. Scott Fitzgerald's Jazz Age novel."
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            Description = "Jane Austen's timeless love story."
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Description = "J.D. Salinger's coming-of-age classic."
                        });
                });

            modelBuilder.Entity("BookShopApp.Models.BookDetail", b =>
                {
                    b.HasOne("BookShopApp.Models.Book", "Book")
                        .WithOne("BookDetail")
                        .HasForeignKey("BookShopApp.Models.BookDetail", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookShopApp.Models.Book", b =>
                {
                    b.Navigation("BookDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
